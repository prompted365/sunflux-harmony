import { Button } from "@/components/ui/button";
import { FileDown, Printer } from "lucide-react";
import { SolarCalculation } from "./types";
import { useState } from "react";
import { useToast } from "@/components/ui/use-toast";
import { supabase } from "@/integrations/supabase/client";
import HeaderSection from "./report/HeaderSection";
import SystemSpecifications from "./report/SystemSpecifications";
import FinancialAnalysis from "./report/FinancialAnalysis";
import EnvironmentalImpact from "./report/EnvironmentalImpact";
import NextSteps from "./report/NextSteps";

interface ReportPreviewProps {
  calc: SolarCalculation;
  propertyAddress: string;
}

const ReportPreview = ({ calc, propertyAddress }: ReportPreviewProps) => {
  const [isExporting, setIsExporting] = useState(false);
  const { toast } = useToast();

  const handleExportPDF = async () => {
    try {
      setIsExporting(true);
      const { data, error } = await supabase.functions.invoke('generate-report', {
        body: { calculationId: calc.id }
      });

      if (error) throw error;

      if (data?.reportUrl) {
        const link = document.createElement('a');
        link.href = data.reportUrl;
        link.download = `sunlink-solar-report-${calc.id}.pdf`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);

        toast({
          title: "Success",
          description: "Report downloaded successfully",
        });
      } else {
        throw new Error('No download URL received');
      }
    } catch (error) {
      console.error('Export error:', error);
      toast({
        title: "Error",
        description: "Failed to export report",
        variant: "destructive",
      });
    } finally {
      setIsExporting(false);
    }
  };

  return (
    <div className="w-full max-w-5xl mx-auto space-y-8 print:space-y-6 bg-background">
      <HeaderSection propertyAddress={propertyAddress} />
      <SystemSpecifications calc={calc} />
      <FinancialAnalysis calc={calc} />
      <EnvironmentalImpact calc={calc} />
      <NextSteps />

      {/* Footer */}
      <div className="text-center space-y-2 text-sm text-muted-foreground print:text-xs">
        <p>Generated by SunLink.ai - Accelerating Solar Adoption Through Innovation</p>
        <p className="text-xs">Analysis based on current market conditions and may be subject to change</p>
      </div>

      {/* Export Actions */}
      <div className="flex justify-end gap-4 print:hidden">
        <Button
          variant="outline"
          onClick={() => window.print()}
          className="gap-2"
        >
          <Printer className="h-4 w-4" />
          Print
        </Button>
        <Button
          onClick={handleExportPDF}
          disabled={isExporting}
          className="gap-2"
        >
          <FileDown className="h-4 w-4" />
          {isExporting ? "Exporting..." : "Export PDF"}
        </Button>
      </div>
    </div>
  );
};

export default ReportPreview;